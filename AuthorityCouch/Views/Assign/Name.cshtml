@model AuthorityCouch.Models.AssignViewModel
@{
    ViewBag.Title = "Assign";
}

<h2><span class="text-muted">Assign > </span>@Model.Doc.authoritativeLabel</h2>
<small class="text-muted"><a href="@Url.Action("Name", "Edit", new { id = Model.Doc._id})"><span class="fa fa-pencil"></span> Edit Authority</a></small>
<hr />
@if (TempData["Message"] != null)
{
    <div class="alert alert-warning" role="alert">
        @Html.Raw(@TempData["Message"])
    </div>
}

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("AssignNameAsResource", "Assign"))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Doc._id)

            <h5>Assign to ArchivesSpace resource</h5>
            <hr />
            <div class="form-group">
                @Html.TextBoxFor(m => m.NewAsResource, new { @class = "form-control", list = "asList", placeholder = "Search guide title..." })
                <datalist id="asList">
                    @foreach (var subject in Model.AsResources)
                    {
                        <option value="@subject.Text" />
                    }
                </datalist>
            </div>

            @*<h5>as a Subject</h5>
            <input type="submit" value="Topic (650)" class="btn btn-primary mt-2" name="asButton" />
            <input type="submit" value="Geographic (651)" class="btn btn-success mt-2" name="asButton" />*@

            <button type="button" class="btn btn-outline-primary mt-2" data-toggle="modal" data-target="#personalModal">
                PersonalName (100)
            </button>
            <button type="button" class="btn btn-outline-success mt-2" data-toggle="modal" data-target="#familyModal">
                FamilyName (100)
            </button>
            <button type="button" class="btn btn-outline-danger mt-2" data-toggle="modal" data-target="#corporateModal">
                CorporateName (110)
            </button>
            @*<button type="button" class="btn btn-outline-info mt-2" data-toggle="modal" data-target="#conferenceModal">
                ConferenceName (111)
            </button>*@

            <div class="modal fade" id="personalModal" tabindex="-1" role="dialog" aria-labelledby="personalModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="personalModalLabel">Personal Name</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <input type="submit" value="PersonalNameCreator" class="btn btn-outline-primary btn-block" name="asButton" />
                            <input type="submit" value="PersonalNameSource" class="btn btn-outline-primary btn-block" name="asButton" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="familyModal" tabindex="-1" role="dialog" aria-labelledby="familyModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="familyModalLabel">Family Name</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                            <input type="submit" value="FamilyNameCreator" class="btn btn-outline-success btn-block" name="asButton" />
                            <input type="submit" value="FamilyNameSource" class="btn btn-outline-success btn-block" name="asButton" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="corporateModal" tabindex="-1" role="dialog" aria-labelledby="corporateModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="corporateModalLabel">Corporate Name</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                            <input type="submit" value="CorporateNameCreator" class="btn btn-outline-danger btn-block" name="asButton" />
                            <input type="submit" value="CorporateNameSource" class="btn btn-outline-danger btn-block" name="asButton" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<hr />
<h5>Existing assignments</h5>

<ul class="list-unstyled">
    @if (Model.Doc.personalNameCreator != null)
    {
        foreach (var item in Model.Doc.personalNameCreator)
        {
            <li>
                @{ var match = Model.AsResources.FirstOrDefault(x => x.Value == item); }
                <a href="@item" class="text-warning" target="_blank"><span class="fa fa-external-link"></span></a>
                <a href="@Url.Action("NameView", "Guide", new {id = item.Split('/')[4]})">@match.Text</a>
                <span class="badge badge-pill badge-secondary">personalNameCreator</span>
                <a href="@Url.Action("RemoveNameAsResource", "Assign", new { id = Model.Doc._id, type = "personalNameCreator", uri = item})" onclick="return confirm('Are you sure you want to delete this assignment?')"><span class="fa fa-trash text-danger"></span></a>
            </li>
        }
    }
    @if (Model.Doc.personalNameSource != null)
    {
        foreach (var item in Model.Doc.personalNameSource)
        {
            <li>
                @{ var match = Model.AsResources.FirstOrDefault(x => x.Value == item); }
                <a href="@item" class="text-warning" target="_blank"><span class="fa fa-external-link"></span></a>
                <a href="@Url.Action("NameView", "Guide", new {id = item.Split('/')[4]})">@match.Text</a>
                <span class="badge badge-pill badge-secondary">personalNameSource</span>
                <a href="@Url.Action("RemoveNameAsResource", "Assign", new { id = Model.Doc._id, type = "personalNameSource", uri = item})" onclick="return confirm('Are you sure you want to delete this assignment?')"><span class="fa fa-trash text-danger"></span></a>
            </li>
        }
    }
    @if (Model.Doc.familyNameCreator != null)
    {
        foreach (var item in Model.Doc.familyNameCreator)
        {
            <li>
                @{ var match = Model.AsResources.FirstOrDefault(x => x.Value == item); }
                <a href="@item" class="text-warning" target="_blank"><span class="fa fa-external-link"></span></a>
                <a href="@Url.Action("NameView", "Guide", new {id = item.Split('/')[4]})">@match.Text</a>
                <span class="badge badge-pill badge-secondary">familyNameCreator</span>
                <a href="@Url.Action("RemoveNameAsResource", "Assign", new { id = Model.Doc._id, type = "familyNameCreator", uri = item})" onclick="return confirm('Are you sure you want to delete this assignment?')"><span class="fa fa-trash text-danger"></span></a>
            </li>
        }
    }
    @if (Model.Doc.familyNameSource != null)
    {
        foreach (var item in Model.Doc.familyNameSource)
        {
            <li>
                @{ var match = Model.AsResources.FirstOrDefault(x => x.Value == item); }
                <a href="@item" class="text-warning" target="_blank"><span class="fa fa-external-link"></span></a>
                <a href="@Url.Action("NameView", "Guide", new {id = item.Split('/')[4]})">@match.Text</a>
                <span class="badge badge-pill badge-secondary">familyNameSource</span>
                <a href="@Url.Action("RemoveNameAsResource", "Assign", new { id = Model.Doc._id, type = "familyNameSource", uri = item})" onclick="return confirm('Are you sure you want to delete this assignment?')"><span class="fa fa-trash text-danger"></span></a>
            </li>
        }
    }
    @if (Model.Doc.corporateNameCreator != null)
    {
        foreach (var item in Model.Doc.corporateNameCreator)
        {
            <li>
                @{ var match = Model.AsResources.FirstOrDefault(x => x.Value == item); }
                <a href="@item" class="text-warning" target="_blank"><span class="fa fa-external-link"></span></a>
                <a href="@Url.Action("NameView", "Guide", new {id = item.Split('/')[4]})">@match.Text</a>
                <span class="badge badge-pill badge-secondary">corporateNameCreator</span>
                <a href="@Url.Action("RemoveNameAsResource", "Assign", new {id = Model.Doc._id, type = "corporateNameCreator", uri = item})" onclick="return confirm('Are you sure you want to delete this assignment?')"><span class="fa fa-trash text-danger"></span></a>
            </li>
        }
    }
    @if (Model.Doc.corporateNameSource != null)
    {
        foreach (var item in Model.Doc.corporateNameSource)
        {
            <li>
                @{ var match = Model.AsResources.FirstOrDefault(x => x.Value == item); }
                <a href="@item" class="text-warning" target="_blank"><span class="fa fa-external-link"></span></a>
                <a href="@Url.Action("NameView", "Guide", new {id = item.Split('/')[4]})">@match.Text</a>
                <span class="badge badge-pill badge-secondary">corporateNameSource</span>
                <a href="@Url.Action("RemoveNameAsResource", "Assign", new {id = Model.Doc._id, type = "corporateNameSource", uri = item})" onclick="return confirm('Are you sure you want to delete this assignment?')"><span class="fa fa-trash text-danger"></span></a>
            </li>
        }
    }

</ul>


